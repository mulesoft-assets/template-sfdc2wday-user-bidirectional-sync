<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd 
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">
	<munit:config name="new-test-suite.xml" />
	<configuration-properties doc:name="Configuration properties"
		file="mule.test.properties" />
	<munit:before-test name="test-suiteBefore_Test"
		description="Before tests actions" doc:id="f46c525a-c12b-446a-ae74-3a3e7c24102f">
		<set-variable value='#[uuid()[0 to 3]]' doc:name="Set Variable alias"
			doc:id="131d3df0-7a69-43f1-8c6f-de716235259d" variableName="alias" />
		<salesforce:query doc:name="Query User from Salesforce"
			doc:id="f3f1e78e-35d9-48e8-9dee-f72eed7bd818" config-ref="Salesforce_Config">
			<salesforce:salesforce-query>SELECT Email, FirstName,
				LastName,Username, Phone, Alias, TimeZoneSidKey, LocaleSidKey,
				EmailEncodingKey, ProfileId, LanguageLocaleKey, ID FROM User WHERE
				Id=':id'</salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"id" : p('sfdc.test.user.id')
}]]]></salesforce:parameters>
		</salesforce:query>
		<set-variable value="#[payload[0]]" doc:name="Set testSfdcUser Variable"
			doc:id="d40ee6b4-3df3-4002-b301-7112852eee31" variableName="testSfdcUser" />
		<ee:transform doc:name="Create GetWorkersRequest"
			doc:id="1903fc01-07f0-4778-bf9f-f1347e46d0b3">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Workers_Request: {
		ns0#Request_References : {
			ns0#Worker_Reference: {
            ns0#ID @(ns0#"type": "Employee_ID" ): p('wday.test.user.id')
        }

		},
		ns0#Response_Group: {
			ns0#Include_Employment_Information: true,
			ns0#Include_Organizations: false,
			ns0#Include_Personal_Information: true,
			ns0#Include_Reference: true,
			ns0#Include_Roles: true,
			ns0#Include_Transaction_Log_Data : true,
			ns0#Include_User_Account : true
		}	
	}
}


]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<workday:human-resources operation="Get_Workers"
			doc:name="Get worker from Workday" doc:id="0a2a9cf0-f4ee-465b-9fc4-83419bec199d"
			config-ref="Workday_Config_version_30" />
		<ee:transform doc:name="Set wdayWorker variable"
			doc:id="d4d7928b-68c1-4d15-b1c8-0d16de67b3c8">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="wdayWorker"><![CDATA[%dw 2.0
output application/java
var firstName= payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.First_Name
var lastName= payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.Last_Name
var alias = firstName ++ lastName
var contactData =  payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Personal_Data.Contact_Data

---
{	
  	FirstName: firstName,
	LastName: lastName,
	Alias: if (sizeOf(alias) > 7 ) alias[0 to 7] else alias,
	City: contactData.Address_Data.Municipality,
	PostalCode: contactData.Address_Data.Postal_Code,
	State: contactData.Address_Data.Country_Region_Reference.ID,
	Country: contactData.Address_Data.Country_Reference.ID,
	Email: contactData.Email_Address_Data.Email_Address,
	Street: contactData.Address_Data.Address_Line_Data,
	Phone: contactData.Phone_Data.Phone_Number,
	Username: contactData.Email_Address_Data.Email_Address ++ ".target",
	ExtId__c: payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Worker_ID,
	ID: payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Worker_ID
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</munit:before-test>
	<munit:test name="test-suiteTest" description="MUnit Test"
		doc:id="ca4f4a6e-81b9-45c2-a96b-b629691510fd">
		<munit:execution>
			<flow-ref doc:name="queryWdayFlow" doc:id="60dd6024-313f-401b-bd5b-d21dbdf308ea"
				name="queryWdayFlow" />
			<ee:transform doc:name="Filter testing data" doc:id="a56ae66a-3a43-4e83-b10f-0dbef42b77e0" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ($.Worker_Reference.ID == vars.wdayWorker.ID) map {
    "Worker_Reference": $.Worker_Reference,
    "Worker_Descriptor": $.Worker_Descriptor,
    "Worker_Data": {
        "Worker_ID": $.Worker_Data.Worker_ID,
        "User_ID": $.Worker_Data.User_ID,
        "Personal_Data": {
            "Name_Data" :  $.Worker_Data.Personal_Data.Name_Data,
            "Contact_Data": {
                "Address_Data" :  $.Worker_Data.Personal_Data.Contact_Data.Address_Data,
                "Phone_Data" :  $.Worker_Data.Personal_Data.Contact_Data.Phone_Data,
                "Email_Address_Data": {
                    "Email_Address" :  vars.testSfdcUser.Email,
                    "Usage_Data" :  $.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Usage_Data,
                    "Email_Reference" :  $.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Reference,
                    "ID" :  $.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.ID,
                }
            }
        },
         "Transaction_Log_Entry_Data":
            "Transaction_Log_Entry": "Transaction_Log_Data":Transaction_Entry_Moment:now()
        ,
        "User_Account_Data": $.Worker_Data.User_Account_Data,
    }
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="fromWorkdaytoSalesforce" doc:id="5437eb22-e8df-4de4-a135-b303f54c561e" name="fromWorkdaytoSalesforceFlow"/>
			<scripting:execute engine="groovy" doc:id="521bfa08-24a7-4ae0-80da-a51e0e6f0a7d" doc:name="Sleep for 10s until the processing is completed" target="sleep">
				<scripting:code>sleep(10000)</scripting:code>
			</scripting:execute>
			<flow-ref doc:name="checkSfdcUser" doc:id="176ab4db-0a15-476b-ac3c-4aa678abf9a2" name="checkSfdcUserSubFlow"/>
			<flow-ref doc:name="querySfdcFlow" doc:id="2c09d456-0bc1-4e1f-b603-98ae5c84878d" name="querySfdcFlow"/>
			<ee:transform doc:name="Filter testing data" doc:id="63c80e34-35ee-47ec-b2d2-c0017d303d21" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload filter ($.Email == vars.testSfdcUser.Email) map {
	
    "ProfileId": $.ProfileId,
    "LastModifiedDate": $.LastModifiedDate,
    "Email": vars.wdayWorker.Email,
    "LocaleSidKey": $.LocaleSidKey,
    "LanguageLocaleKey": $.LanguageLocaleKey,
    "TimeZoneSidKey": $.TimeZoneSidKey,
    "ExtId__c": vars.wdayWorker.ExtId__c,
    "FirstName": vars.testSfdcUser.FirstName,
    "PostalCode": $.PostalCode,
    "City": $.City,
    "type": $."type",
    "EmailEncodingKey": $.EmailEncodingKey,
    "CommunityNickname": $.CommunityNickname,
    "Username": $.Username,
    "Alias": $.Alias,
    "State": $.State,
    "Phone": vars.testSfdcUser.Phone,
    "Country": $.Country,
    "Street": $.Street,
    "Id": $.Id,
    "LastName":vars.testSfdcUser.LastName,
    "LastModifiedById": $.LastModifiedById,
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<flow-ref doc:name="fromSalesforcetoWorkday" doc:id="e6ddb0e1-22c8-4903-bdcb-819fbebbe280" name="fromSalesforcetoWorkdayFlow"/>
			<scripting:execute engine="groovy" doc:id="8818aaea-babf-4897-be6c-a47134bb694e" doc:name="Sleep for 40s until the processing is completed" target="sleep">
				<scripting:code>sleep(40000)</scripting:code>
			</scripting:execute>
			<flow-ref doc:name="checkWorkdayUser" doc:id="16ddb6ea-d575-464b-95cc-6b14aebd370d" name="checkWorkdayUserSubFlow"/>
			<flow-ref doc:name="Reference to revertWorkerSubFlow" doc:id="6c589bf7-dede-4f28-9e84-9b4b6d84087f" name="revertWorkerSubFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert FirstName of migrated user from Salesforce" doc:id="94144b8a-07ce-47d5-9702-beb709df6ae7" expression="#[vars.wdayWorker.FirstName]" is="#[MunitTools::equalTo(vars.migratedSfdcUser.FirstName)]" message="FirstName is not equal"/>
			<munit-tools:assert-that doc:name="Assert City of migrated user from Salesforce" doc:id="51ecb8bf-f5dd-4c3e-a956-8887e0496b04" expression="#[vars.wdayWorker.City]" is="#[MunitTools::equalTo(vars.migratedSfdcUser.City)]" message="City is not equal"/>
			<munit-tools:assert-that doc:name="Assert LastName of migrated worker from Workday" doc:id="91f9c9fb-b1fe-44d6-85da-e66c7de24ca6" expression="#[vars.testSfdcUser.LastName]" is="#[MunitTools::equalTo(vars.migratedWdayWorker.LastName)]" message="LastName is not equal"/>
			<munit-tools:assert-that doc:name="Assert FirstName of migrated worker from Workday" doc:id="21cccd39-38a9-4210-aaab-7e1402b4eb42" expression="#[vars.testSfdcUser.FirstName]" is="#[MunitTools::equalTo(vars.migratedWdayWorker.FirstName)]" message="FirstName is not equal"/>
		</munit:validation>
	</munit:test>
	<sub-flow name="checkSfdcUserSubFlow" doc:id="8da0068a-9cbe-4961-99ff-bae20cf346bd" >
		<salesforce:query doc:name="Get migrated User from Salesforce" doc:id="f6cbe065-e6e5-4d45-8eff-db84e422ed89" config-ref="Salesforce_Config" target="migratedSfdcUser" targetValue="#[payload[0]]">
			<salesforce:salesforce-query >SELECT Email, FirstName, LastName, City, PostalCode FROM User WHERE Email=':email'</salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"email" : vars.testSfdcUser.Email
}]]]></salesforce:parameters>
		</salesforce:query>
	</sub-flow>
	<sub-flow name="revertWorkerSubFlow" doc:id="d9cda257-bab1-4fe5-9862-398bfe0fb24d" >
		<ee:transform doc:name="Prepare query for reverting worker" doc:id="61fa159b-409b-4843-b5b2-7b23f1f24408">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
ns0#Maintain_Contact_Information_for_Person_Event_Request: 
{
	ns0#Maintain_Contact_Information_Data: {
		ns0#Effective_Date: now() as Date ,
		ns0#Worker_Contact_Information_Data : {
			ns0#Address_Data : {
				ns0#Address_Line_Data @(ns0#Type : "ADDRESS_LINE_1"): vars.wdayWorker.Street,
				ns0#Country_Reference: {
					ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): p('wday.country')
				},
				ns0#Country_Region_Reference: {
					ns0#ID @(ns0#"type": "Country_Region_ID"):  p('wday.state')
				},				
				ns0#Municipality: vars.wdayWorker.City,
				ns0#Postal_Code: vars.wdayWorker.PostalCode,
				ns0#Usage_Data @(ns0#Public: false): {
					ns0#Type_Data: {
						ns0#Type_Reference: {
							ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
						}
					}
				}
			},
			ns0#Email_Address_Data: {
				ns0#Email_Address: vars.wdayWorker.Email,
				ns0#Usage_Data @(ns0#Public: true): {
					ns0#Type_Data : {
						ns0#Type_Reference: {
							ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
						}
					}
				}
			},
			ns0#Phone_Data: {
				ns0#Country_ISO_Code: p('wday.country'),
				ns0#Phone_Device_Type_Reference: {
					ns0#ID @(ns0#"type": "Phone_Device_Type_ID"):"1063.5"
				},
				ns0#Phone_Number: vars.wdayWorker.Phone replace "-" with "" ,
				ns0#Usage_Data @(ns0#Public: true): {
					ns0#Type_Data: {
						ns0#Type_Reference: {
							ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
						}
					}
				}
			}		
		},
		ns0#Worker_Reference: {
			ns0#ID @(ns0#"type": "Employee_ID"): vars.wdayWorker.ExtId__c
		}
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<workday:human-resources doc:name="Revert worker contact information" doc:id="a6f96069-6d79-4c07-bb3b-42d2f356cb0e" config-ref="Workday_Config_version_30" operation="Maintain_Contact_Information">
					</workday:human-resources>
		<ee:transform doc:name="Prepare query for change name" doc:id="033e0000-5da6-470b-b9ff-b6db09b99885">
                        <ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
ns0#Change_Preferred_Name_Request: 
{
	ns0#Change_Preferred_Name_Data: {
		ns0#Name_Data: {
			ns0#Country_Reference: {
				ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): p('wday.country')	
			},
			ns0#First_Name: vars.wdayWorker.FirstName,
			ns0#Last_Name: vars.wdayWorker.LastName,
			},
		ns0#Worker_Reference: {
			ns0#ID @(ns0#"type": "Employee_ID"): vars.wdayWorker.ExtId__c
		}
	}
}]]></ee:set-payload>
                        </ee:message>
                        <ee:variables>
                        </ee:variables>
                    </ee:transform>
		<workday:human-resources doc:name="Revert worker name" doc:id="e23a0a87-fec4-4ef5-9bd4-275d6f85e41d" config-ref="Workday_Config_version_30" operation="Change_Preferred_Name">
					</workday:human-resources>
	</sub-flow>
	<sub-flow name="checkWorkdayUserSubFlow" doc:id="4f8c1c3d-3072-411c-9396-d362d586ee46" >
		<ee:transform doc:name="Create GetWorkersRequest"
                        doc:id="428c5077-b06f-474e-a67b-d1779b857a60">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Workers_Request: {
		ns0#Request_References : {
			ns0#Worker_Reference: {
            ns0#ID @(ns0#"type": "Employee_ID" ): p('wday.test.user.id')
        }

		},
		ns0#Response_Group: {
			ns0#Include_Employment_Information: true,
			ns0#Include_Organizations: false,
			ns0#Include_Personal_Information: true,
			ns0#Include_Reference: true,
			ns0#Include_Roles: true,
			ns0#Include_Transaction_Log_Data : true,
			ns0#Include_User_Account : true
		}	
	}
}


]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
		<workday:human-resources operation="Get_Workers" doc:name="Get worker from Workday" doc:id="a9ab69e7-027b-4228-b74f-33082589c60c" config-ref="Workday_Config_version_30"/>
		<ee:transform doc:name="Set migratedWdayWorker variable" doc:id="be111789-e9c0-4dc2-8881-b47b43ce1d06">
                        <ee:message>
                        </ee:message>
                        <ee:variables>
				<ee:set-variable variableName="migratedWdayWorker" ><![CDATA[%dw 2.0
output application/java
var firstName= payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.First_Name
var lastName= payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.Last_Name
var alias = firstName ++ lastName
var contactData =  payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Personal_Data.Contact_Data

---
{	
  	FirstName: firstName,
	LastName: lastName,
	Alias: if (sizeOf(alias) > 7 ) alias[0 to 7] else alias,
	City: contactData.Address_Data.Municipality,
	PostalCode: contactData.Address_Data.Postal_Code,
	State: contactData.Address_Data.Country_Region_Reference.ID,
	Country: contactData.Address_Data.Country_Reference.ID,
	Email: contactData.Email_Address_Data.Email_Address,
	Street: contactData.Address_Data.Address_Line_Data,
	Phone: contactData.Phone_Data.Phone_Number,
	Username: contactData.Email_Address_Data.Email_Address ++ ".target",
	ExtId__c: payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Worker_ID,
	ID: payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Worker_ID
}]]></ee:set-variable>
                        </ee:variables>
                    </ee:transform>    
		
	</sub-flow>
	<munit:after-test name="test-suiteAfter_Test" description="After tests actions" doc:id="65bfbdac-891b-4138-86e5-d0dd5975dc4f" >
		<salesforce:update doc:name="Revert user in SFDC" doc:id="28861cd5-704d-4446-b064-14c449c0bf17" config-ref="Salesforce_Config" type="User">
			<salesforce:records ><![CDATA[#[[vars.testSfdcUser]]]]></salesforce:records>
		</salesforce:update>
                
	</munit:after-test>

</mule>