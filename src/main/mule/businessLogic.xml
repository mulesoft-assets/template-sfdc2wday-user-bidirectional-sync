<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
    xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
    xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
    xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">

    <flow name="fromSalesforcetoWorkdayFlow" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67">
        <batch:job jobName="fromSalesforcetoWorkdayBatch"
            doc:id="204892ae-0d97-4326-beae-310c8d52b7a6">
            <batch:process-records>
                <batch:step
                    name="forEachUserInSalesforceGetUserFromWorkdayStep"
                    doc:id="89713774-362a-4e92-9bdc-41e31802bf38"
                    acceptExpression="#[payload.ExtId__c != null]">
                    <set-variable value="#[payload]"
                        doc:name="payload to sfdcUser" doc:id="ee6088c1-0406-4d2f-9183-a69c06ea3a8c"
                        variableName="sfdcUser" />
                    <ee:transform doc:name="Create GetWorkersRequest"
                        doc:id="f4611b88-2b13-454f-ab5c-159df19efb6b">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Workers_Request: {
		ns0#Request_References : {
			ns0#Worker_Reference: {
            ns0#ID @(ns0#"type": "Employee_ID" ): vars.sfdcUser.ExtId__c
        }

		},
		ns0#Response_Group: {
			ns0#Include_Employment_Information: true,
			ns0#Include_Organizations: false,
			ns0#Include_Personal_Information: true,
			ns0#Include_Reference: true,
			ns0#Include_Roles: true,
			ns0#Include_Transaction_Log_Data : true,
			ns0#Include_User_Account : true
		}	
	}
}


]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <workday:human-resources doc:name="Retrieve worker from Wday" doc:id="c71738c1-52e3-4143-947a-29c7854ac340" config-ref="Workday_Config_version_30" operation="Get_Workers"/>
                    <ee:transform doc:name="Check user is in Workday"
                        doc:id="0f71109e-1389-4514-b3f1-b1649cb6660c">
                        <ee:message>
                        </ee:message>
                        <ee:variables>
                            <ee:set-variable
                                variableName="sfdcUser"><![CDATA[%dw 2.0
output application/java
---
if ( payload != null) vars.sfdcUser else (vars.sfdcUser - 'ExtId__c')]]></ee:set-variable>
                        </ee:variables>
                    </ee:transform>
                    <ee:transform doc:name="sfdcUser to payload"
                        doc:id="4c604cc6-d0ca-40b5-9cd3-027c829f9478">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
vars.sfdcUser]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                </batch:step>
                <batch:step name="GetLastModifiedDateInWorkdayStep"
                    doc:id="ea3182b8-3006-4139-8376-33394416b7e6"
                    acceptExpression="#[payload.ExtId__c != null]">
                    <ee:transform doc:name="Create GetWorkersRequest"
                        doc:id="6701e7c4-d19f-43c7-a675-58333d9d6a48">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Workers_Request: {
		ns0#Request_Criteria: {
			ns0#Transaction_Log_Criteria_Data: [{
               ns0#Transaction_Date_Range_Data: {
                   ns0#Updated_From: (now() - |PT100H|) as DateTime,
                   ns0#Updated_Through: (now() - |PT3S|) as DateTime
               }
           }]

		},
		ns0#Request_References: {
			ns0#Worker_Reference: {
    	        ns0#ID @(ns0#"type": "Employee_ID" ): payload.ExtId__c
	        }
		},
		ns0#Response_Group: {
			ns0#Include_Employment_Information: true,
			ns0#Include_Organizations: false,
			ns0#Include_Personal_Information: true,
			ns0#Include_Reference: true,
			ns0#Include_Roles: true,
			ns0#Include_Transaction_Log_Data : true,
			ns0#Include_User_Account : true
		}	
	}
}


]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <workday:human-resources doc:name="Get workers from workday" doc:id="a24517a6-00dd-4cdd-949a-65e51c35835b" config-ref="Workday_Config_version_30" operation="Get_Workers"/>
                    <ee:transform doc:name="Get newest lastModifiedDate"
                        doc:id="d85583dd-fac9-4754-ad0b-b9b38cd5cacc">
                        <ee:message>
                        </ee:message>
                        <ee:variables>
                            <ee:set-variable
                                variableName="lastModifiedDate"><![CDATA[%dw 2.0
output application/java
---
max(payload.Get_Workers_Response.Response_Data.Worker.Worker_Data.Transaction_Log_Entry_Data.*Transaction_Log_Entry.Transaction_Log_Data.Transaction_Entry_Moment )
]]></ee:set-variable>
                        </ee:variables>
                    </ee:transform>
                    <ee:transform doc:name="sfdcUser to payload"
                        doc:id="7f9154ec-9794-4042-97ae-348d142b1061">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
vars.sfdcUser]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                </batch:step>
                <batch:step name="UpdateUserInWdayStep"
                    doc:id="9afe5dbf-ef1e-41b7-9340-9569d49dec98"
                    acceptExpression="#[payload.ExtId__c != null and ((vars.lastModifiedDate == null) or (vars.sfdcUser.LastModifiedDate &gt; vars.lastModifiedDate and p('sfdc.integration.user.id') != vars.sfdcUser.LastModifiedById))]">
                    <ee:transform
                        doc:name="Create MaintainContactInformationRequest"
                        doc:id="504512d2-262e-4594-afb9-e27ecef8d773">
                        <ee:message>
                        </ee:message>
                        <ee:variables>
                            <ee:set-variable
                                variableName="xmlForWday"><![CDATA[%dw 2.0
output application/xml
fun lookupCountryISOCode(ISOCode) = {
	code: if (ISOCode == 'US') 'USA' else p('wday.country')	
}

fun createCountryRegionReference(countryISOCode, stateISOCode) = {
	code: lookupCountryISOCode(countryISOCode).code ++ "-" ++	stateISOCode
}

ns ns0 urn:com.workday/bsvc
---
ns0#Maintain_Contact_Information_for_Person_Event_Request: 
{
	ns0#Maintain_Contact_Information_Data: {
		ns0#Effective_Date: now() as Date ,
		ns0#Worker_Contact_Information_Data : {
			ns0#Address_Data : {
				ns0#Address_Line_Data @(ns0#Type : "ADDRESS_LINE_1"): if (payload.Street == null) p('wday.location') else payload.Street,
				ns0#Country_Reference: {
					ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): lookupCountryISOCode(payload.Country).code
				},
				ns0#Country_Region_Reference: {
					ns0#ID @(ns0#"type": "Country_Region_ID"):  if (payload.State == null ) p('wday.state') else createCountryRegionReference(payload.Country,payload.State).code
				},				
				ns0#Municipality: if (payload.City == null) p('wday.city')   else payload.City,
				ns0#Postal_Code: if (payload.PostalCode== null) p('wday.postalCode') else payload.PostalCode,
				ns0#Usage_Data @(ns0#Public: false): {
					ns0#Type_Data: {
						ns0#Type_Reference: {
							ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
						}
					}
				}
			},
			ns0#Email_Address_Data: {
				ns0#Email_Address: payload.Email,
				ns0#Usage_Data @(ns0#Public: true): {
					ns0#Type_Data : {
						ns0#Type_Reference: {
							ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
						}
					}
				}
			},
			(ns0#Phone_Data: {
				ns0#Country_ISO_Code: lookupCountryISOCode(payload.country).code,
				ns0#Phone_Device_Type_Reference: {
					ns0#ID @(ns0#"type": "Phone_Device_Type_ID"):"1063.5"
				},
				ns0#Phone_Number: payload.Phone replace "-" with "" ,
				ns0#Usage_Data @(ns0#Public: true): {
					ns0#Type_Data: {
						ns0#Type_Reference: {
							ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
						}
					}
				}
			}) if payload.Phone != null			
		},
		ns0#Worker_Reference: {
			ns0#ID @(ns0#"type": "Employee_ID"): payload.ExtId__c
		}
	}
}]]></ee:set-variable>
                        </ee:variables>
                    </ee:transform>
                    <workday:human-resources doc:name="Maintain contact information" doc:id="23955cad-a8fb-49d6-aefc-1103cf2301e9" config-ref="Workday_Config_version_30" operation="Maintain_Contact_Information" target="wdayRetval_1">
						<workday:content ><![CDATA[#[vars.xmlForWday]]]></workday:content>
					</workday:human-resources>
                    <ee:transform doc:name="Prepare ChangePreferredNameRequest"
                        doc:id="10b44ec1-32ad-4310-88ab-3d083a5b8b0f">
                        <ee:message>
                        </ee:message>
                        <ee:variables>
                            <ee:set-variable
                                variableName="xmlForWday"><![CDATA[%dw 2.0
output application/xml

fun lookupCountryISOCode(ISOCode) = {
	code: if (ISOCode == 'US') 'USA' else p('wday.country')	
}
ns ns0 urn:com.workday/bsvc
---
ns0#Change_Preferred_Name_Request: 
{
	ns0#Change_Preferred_Name_Data: {
		ns0#Name_Data: {
			ns0#Country_Reference: {
				ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): lookupCountryISOCode(payload.Country).code
			},
			ns0#First_Name: payload.FirstName,
			ns0#Last_Name: payload.LastName,
			(ns0#Middle_Name: payload.MiddleName) if payload.MiddleName != null		
		},
		ns0#Worker_Reference: {
			ns0#ID @(ns0#"type": "Employee_ID"): payload.ExtId__c
		}
	}
}]]></ee:set-variable>
                        </ee:variables>
                    </ee:transform>
                    <workday:human-resources doc:name="Change preferred name" doc:id="c272ea87-7381-4741-abcf-f9601a4edbba" config-ref="Workday_Config_version_30" operation="Change_Preferred_Name" target="wdayRetval_2">
						<workday:content ><![CDATA[#[vars.xmlForWday]]]></workday:content>
					</workday:human-resources>
                </batch:step>
                <batch:step name="InsertNewUserToWorkdayStep"
                    doc:id="0653dd1b-05e1-42f2-a73a-9ad178ceb0b3"
                    acceptExpression="#[payload.ExtId__c == null]">
                    <set-variable value="#[payload]"
                        doc:name="payload to sfdcUser" doc:id="474a8f93-4ab8-41b0-a24b-b37e8502715e"
                        variableName="sfdcUser" />
                    <ee:transform doc:name="Prepare HireEmployeeRequest"
                        doc:id="49a7dc98-30f1-486b-b782-8386af681bb4">
                        <ee:message>
                        </ee:message>
                        <ee:variables>
                            <ee:set-variable
                                variableName="xmlForInsert"><![CDATA[%dw 2.0
output application/xml
fun lookupCountryISOCode(ISOCode) = {
    code: if (ISOCode == 'US') 'USA' else p('wday.country')    
}
ns ns0 urn:com.workday/bsvc
---
ns0#Hire_Employee_Request:
{
	ns0#Business_Process_Parameters: {
		ns0#Auto_Complete : true
	},
	ns0#Hire_Employee_Data: {
		ns0#Applicant_Data: {
			ns0#Personal_Data: {
				ns0#Contact_Data: {
					ns0#Address_Data: {
                        ns0#Address_Line_Data @(ns0#Type: "ADDRESS_LINE_1" ): payload.Address,
						ns0#Country_Reference: {
                            ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): lookupCountryISOCode(payload.country).code
                        },
                        ns0#Country_Region_Reference: {
                            ns0#ID @(ns0#"type": "Country_Region_ID"): if ( payload.State?) payload.State else p('wday.state')
                        },
                        (ns0#Effective_Date: payload.CreatedDate as Date) if (payload.CreatedDate != null),
                        ns0#Municipality: if (payload.City == '') p('wday.city') else payload.City,
                        ns0#Postal_Code:  if (payload.PostalCode == '') p('wday.postalCode') else payload.PostalCode,
						ns0#Usage_Data @(ns0#Public: false): {
                            ns0#Type_Data @(ns0#Primary: true): {
                                ns0#Type_Reference: {
                                    ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
                                }
                            }                        
                        }                        
                    },
					ns0#Email_Address_Data: {
                        ns0#Email_Address: payload.Email,
                        ns0#Usage_Data @(ns0#Public: true): {
                            ns0#Type_Data @(ns0#Primary: true): {
                                ns0#Type_Reference: {
                                    ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
                                }
                            }                        
                        }
                    },
					ns0#Phone_Data: {
                        ns0#Phone_Number : payload.Phone,
                        ns0#Country_ISO_Code : lookupCountryISOCode(payload.country).code,                        
                        ns0#Usage_Data @(ns0#Public: true): {
                            ns0#Type_Data @(ns0#Primary: true): {
                                ns0#Type_Reference: {
                                    ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
                                }
                            }                        
                        }
                    },  
                },
				ns0#Name_Data: {                    
                    ns0#Legal_Name_Data: {
                        ns0#Name_Detail_Data: {
                            ns0#Country_Reference: {
                                ns0#ID @(ns0#"type" : "ISO_3166-1_Alpha-3_Code"): lookupCountryISOCode(payload.country).code
                            },
                            ns0#First_Name : payload.FirstName,
                            ns0#Last_Name : payload.LastName
                        }
                    }
                }
			}
		},
		ns0#Create_Workday_Account_Sub_Process : {
			ns0#Business_Sub_Process_Parameters: {
				ns0#Skip: true
			}
		},
		ns0#Hire_Employee_Event_Data: {
            ns0#Employee_Type_Reference: {
                ns0#ID @(ns0#"type": "Employee_Type_ID"): "Regular"
            },            
            ns0#Hire_Reason_Reference: {
                ns0#ID @(ns0#"type": "General_Event_Subcategory_ID"): "Hire_Employee_New_Hire_Fill_Vacancy"
            },
            ns0#Position_Details: {                
                ns0#Job_Profile_Reference: {
                    ns0#ID @(ns0#"type": "Job_Profile_ID"): p('wday.jobprofileId')
                },
                ns0#Location_Reference: {
                    ns0#ID @(ns0#"type": "Location_ID"): p('wday.location')
                },
                ns0#Pay_Rate_Type_Reference: {
                    ns0#ID @(ns0#"type": "Pay_Rate_Type_ID"): "Salary"
                },                
                ns0#Position_Time_Type_Reference: {
                    ns0#ID @(ns0#"type": "Position_Time_Type_ID"): "Full_time"
                }
            }
        },
		ns0#Organization_Reference: {
            ns0#ID @(ns0#"type": "Organization_Reference_ID"): p('wday.organization')
        },
		ns0#Propose_Compensation_for_Hire_Sub_Process : {
			ns0#Business_Sub_Process_Parameters: {
				ns0#Auto_Complete: true
			},
            ns0#Propose_Compensation_for_Hire_Data: {
                ns0#Pay_Plan_Data @(ns0#Replace: false): {
                    ns0#Pay_Plan_Sub_Data: {
                        ns0#Amount: 100,
                        ns0#Currency_Reference: {
    						ns0#ID @(ns0#"type": "Currency_ID"): p('wday.currency')     
						},
                        ns0#Frequency_Reference: {
    						ns0#ID @(ns0#"type": "Frequency_ID"): "Annual"     
						},
                        ns0#Pay_Plan_Reference: {
    						ns0#ID @(ns0#"type": "Compensation_Plan_ID"): "SALARY_Hourly_Plan"     
						}                    
					}
                }
            }
		}
	}
}]]></ee:set-variable>
                        </ee:variables>
                    </ee:transform>
                    <workday:staffing doc:name="Hire employee" doc:id="e2fe45a1-64ad-464b-9022-2a51389d3c45" config-ref="Workday_Config_version_30" operation="Hire_Employee">
						<workday:content ><![CDATA[#[vars.xmlForInsert]]]></workday:content>
					</workday:staffing>
                    <ee:transform doc:name="Prepare data for update sfdc user"
                        doc:id="583a944a-18e7-4cce-8c26-2c59d43f1b9a">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[vars.sfdcUser 
- 'LastModifiedDate'
- 'LastModifiedById'
- 'type'
++ ExtId__c: payload.Hire_Employee_Event_Response.Employee_Reference[1]
]]]></ee:set-payload>
                        </ee:message>
                    </ee:transform>
                    <salesforce:upsert type="User"
                        doc:name="Upsert" doc:id="e41eda9c-04da-470f-ad18-10e5ba533339"
                        config-ref="Salesforce_Config"
                        externalIdFieldName="Id" />
                </batch:step>
            </batch:process-records>
            <batch:on-complete>
                <os:store key="syncState" doc:name="Set sync state to fromWday"
                    doc:id="f08de372-2fb9-4aef-80ca-f6da2241fc75"
                    objectStore="SchedulerStatus">
                    <os:value><![CDATA[#["fromWday"]]]></os:value>
                </os:store>
            </batch:on-complete>

        </batch:job>
    </flow>
    <flow name="fromWorkdaytoSalesforceFlow" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67">
        <batch:job jobName="fromWorkdaytoSalesforceBatch"
            doc:id="204892ae-0d97-4326-beae-310c8d52b7a6" blockSize="${page.size}">
            <batch:process-records>
				<batch:step name="ForEachUserInWorkdayGetLastModifiedDateStep"
                    doc:id="2079fa7e-15f8-4ce7-865c-c953bb6e6dfc">
					<set-variable
                        value="#[payload.Worker_Data.Transaction_Log_Entry_Data.*Transaction_Log_Entry.Transaction_Log_Data.Transaction_Entry_Moment[0]]"
                        doc:name="wdayLastMOdifiedDate" doc:id="41654abb-8403-4ca7-b0e3-842fc0dde4ae"
                        variableName="wdayLastModifiedDate" />
                </batch:step>
                <batch:step
                    name="ForEachUserInWorkdayGetLastModifiedDateInSalesforceStep"
                    doc:id="853c39b4-b226-4a88-9655-649f159cff9a">
					<salesforce:query
                        doc:name="get LastModifiedDate and LastModifiedById"
                        doc:id="a3e7dab0-3e0d-4def-8c43-16513a93c36f"
                        config-ref="Salesforce_Config" target="sfdcUser">
                        <salesforce:salesforce-query>SELECT Id, Email,
                            LastModifiedDate, LastModifiedById FROM User
                            WHERE Email = ':email'
                        </salesforce:salesforce-query>
                        <salesforce:parameters><![CDATA[#[output application/java
---
{
	"email" : payload.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Address
}]]]></salesforce:parameters>
                    </salesforce:query>
                </batch:step>
                 <batch:step name="forEachUserToBeUpsertedInSalesforceStep"
                    doc:id="1cc6c315-4477-4845-ab13-70a198e603d0"
                    acceptExpression="#[ output application/java --- (vars.wdayLastModifiedDate == null or vars.sfdcUser.LastModifiedDate[0] ==null or vars.wdayLastModifiedDate &gt; vars.sfdcUser.LastModifiedDate[0]) and (vars.sfdcUser.LastModifiedById[0] == null or vars.sfdcUser.LastModifiedById[0] != p('wday.integration.user.id'))]">
           			<ee:transform doc:name="Prepare data for sfdc upsert"
                        doc:id="48f67adf-4b87-41b1-a29a-6e81b0b58aff">
                        <ee:message>
                            <ee:set-payload><![CDATA[%dw 2.0
output application/java
var firstName= payload.Worker_Data.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.First_Name
var lastName= payload.Worker_Data.Personal_Data.Name_Data.Preferred_Name_Data.Name_Detail_Data.Last_Name
var alias = firstName ++ lastName

---
[{
  	FirstName: firstName,
	LastName: lastName,
	Alias: if (sizeOf(alias) > 7 ) alias[0 to 7] else alias,
	City: payload.Worker_Data.Personal_Data.Contact_Data.Address_Data.Municipality,
	PostalCode: payload.Worker_Data.Personal_Data.Contact_Data.Address_Data.Postal_Code,
	State: payload.Worker_Data.Personal_Data.Contact_Data.Address_Data.Country_Region_Reference.ID,
	Country: payload.Worker_Data.Personal_Data.Contact_Data.Address_Data.Country_Reference.ID,
	Email: payload.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Address,
	Street: payload.Worker_Data.Personal_Data.Contact_Data.Address_Data.Address_Line_Data,
	Phone: payload.Worker_Data.Personal_Data.Contact_Data.Phone_Data.Phone_Number,
	(Extension: payload.Worker_Data.Personal_Data.Contact_Data.Phone_Data.Phone_Extension) if payload.Worker_Data.Personal_Data.Contact_Data.Phone_Data.Phone_Extension != null,
	ProfileId: p('sfdc.profileId'),
	(Id: vars.sfdcUser.Id[0]) if vars.sfdcUser != null, 
	
	// Each Username should be UNIQUE even between different sandboxes of a single instance 
 	// If you are trying this kick with one instance and multiple sandboxes, please make sure that the target username is not the same as the original as a duplicated username error will come up 
	Username:  payload.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Address ++ ".target",
	TimeZoneSidKey: p('sfdc.timeZoneSidKey'),
	LocaleSidKey: if (payload.Worker_Data.User_Account_Data != null and payload.Worker_Data.User_Account_Data.Locale_Reference != null) payload.Worker_Data.User_Account_Data.Locale_Reference.ID  else p('sfdc.localeSidKey'),
	EmailEncodingKey: p('sfdc.emailEncodingKey'),
	LanguageLocaleKey: if (payload.Worker_Data.User_Account_Data != null and payload.Worker_Data.User_Account_Data.Default_Display_Language_Reference != null) payload.Worker_Data.User_Account_Data.Default_Display_Language_Reference.ID else p('sfdc.languageLocaleKey'),
	(CommunityNickname: "CN_" ++ payload.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Addresss) if payload.Worker_Data.Personal_Data.Contact_Data.Email_Address_Data.Email_Addresss !=null,
 	
 	ExtId__c: payload.Worker_Reference.ID,
 	IsActive: true
}]]]></ee:set-payload>
                        </ee:message>
                        <ee:variables>
                        </ee:variables>
                    </ee:transform>
					<salesforce:upsert type="User"
                        doc:name="Upsert" doc:id="00a2af6c-62a8-4fb1-9852-1de4cb44a069"
                        config-ref="Salesforce_Config"
                        externalIdFieldName="Id" />
                </batch:step>
            </batch:process-records>
            <batch:on-complete>
                <os:store key="syncState" doc:name="Set sync state to fromSfdc"
                    doc:id="f08de372-2fb9-4aef-80ca-f6da2241fc75"
                    objectStore="SchedulerStatus">
                    <os:value><![CDATA[#["fromSfdc"]]]></os:value>
                </os:store>
            </batch:on-complete>

        </batch:job>
    </flow>
</mule>

        